@model MvcMovie.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}
<h2>Index</h2>

<form asp-controller="Movies" asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Genres: <select asp-for="MovieGenre" asp-items="Model.Genres">
                <option value="">All</option>
            </select>
            Title: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table id="indexAdm" class="table display">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RelDateParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Release Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Genre</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Price</a>
            </th>
            <th>
                Rating
            </th>
            <th>
                Quantity
            </th>
            <th>
                Quantity Maximum
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityMax)
                </td>
                <td>
                    <a href="javascript:void(0);" class="anchorEdit" data-id="@item.Id">Edit</a> |
                    <a href="javascript:void(0);" class="anchorDelete" data-id="@item.Id">Delete</a> |
                    <a href="javascript:void(0);" class="anchorDetail" data-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.Movies.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.Movies.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="~/Views/Admin/AdminIndex.js"></script>
}